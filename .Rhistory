?cor()
head(mtcars)
plt <- ggplot(mtcars, aes(x=hp, y=qsec))
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
load("~/git/module_16/R_Analysis/01-Demo/.RData")
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
View(filter_table2)
View(mpg_summary)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
getwd()
setwd("~/git/module_16/R_Analysis/01-Demo")
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
library(ggplot2)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv', stringsAsFactors = F)
head(used_cars)
plt <- ggplot(used_cars, aes(x=Miles_Driven, y = Selling_Price))
plt + geom_point()
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
View(used_matrix)
View(used_matrix)
?lm()
lm(qsec ~ hp, mtcars)
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("~/git/module_16/MechaCar_Statistical_Analysis")
View(demo_table)
library(dplyr)
Mecha_Car_df <- read.csv(file='..Starter_Code/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
Mecha_Car_df <- read.csv(file='../Starter_Code/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
pwd()
cwd()
getwd()
Mecha_Car_df <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
Mecha_Car_df <- read.csv(file='Starter_Code/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(Mecha_Car_df)
lm(qsec ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg,data=Mecha_Car_df) #generate multiple linear regression model
View(mtcars_filt)
?lm()
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=Mecha_Car_df) #generate multiple linear regression model
?summary()
summary(Mecha_Car_df)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=Mecha_Car_df))
Coil_Table <- read.csv(file='Starter_Code/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(Coil_Table)
total_summary_df <- summarize(total_summary)
total_summary_df <- summarize(Coil_Table)
View(total_summary_df)
View(Coil_Table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
total_summary_df <- Coil_Table %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = variance(PSI), SD = sd(PSI))
total_summary_df <- Coil_Table %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI).groups = 'keep')
total_summary_df <- Coil_Table %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI),.groups = 'keep')
View(total_summary_df)
total_summary_df <- Coil_Table %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
View(total_summary_df)
lot_summary_df <- Coil_Table %>% group_by(lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
lot_summary_df <- Coil_Table %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
View(lot_summary_df)
View(total_summary_df)
?t.test()
View(Coil_Table)
View(lot_summary_df)
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI))) #compare sample versus population means
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI)) subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot1'))
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI)), subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot1'))
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI)), subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot1'))
t.test(log10(Coil_Table[Coil_Table$Manufacturing_Lot == 'Lot1']),mu=mean(log10(Coil_Table$PSI)))
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI)))
t.test(log10(lot_summary_df$Mean),mu=1500(log10(Coil_Table$PSI)))
t.test(log10(lot_summary_df$Mean),mu=1500(log10(Coil_Table$PSI)))
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=Mecha_Car_df) #generate multiple linear regression model
Coil_Table <- read.csv(file='Starter_Code/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
total_summary_df <- Coil_Table %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
lot_summary_df <- Coil_Table %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
View(total_summary_df)
View(lot_summary_df)
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI)))
t.test(log10(lot_summary_df$Mean),mu=1500(log10(Coil_Table$PSI)))
View(filter_table)
View(lot_summary_df)
View(Mecha_Car_df)
View(mpg_summary)
View(used_cars)
t.test((Coil_Table$PSI),mu=1500)
t.test((subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot1')$PSI),mu=1500)
t.test((subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot2')$PSI),mu=1500)
t.test((subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot3')$PSI),mu=1500)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=Mecha_Car_df))
summary(lm(mpg ~ vehicle_length + ground_clearance ,data=Mecha_Car_df))
summary(lm(mpg ~ vehicle_weight + spoiler_angle + AWD,data=Mecha_Car_df))
View(Coil_Table)
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI))) #compare sample versus population means
t.test(log10(lot_summary_df$Mean),mu=mean(log10(Coil_Table$PSI))) #compare sample versus population means
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=Mecha_Car_df))
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=Mecha_Car_df)
lot_summary_df <- Coil_Table %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
t.test((Coil_Table$PSI),mu=1500)
t.test((subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot1')$PSI),mu=1500)
t.test((subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot2')$PSI),mu=1500)
t.test((subset(Coil_Table, Coil_Table$Manufacturing_Lot == 'Lot3')$PSI),mu=1500)
